export declare class ScheduleHandler {
  name?: string
  id: string
  schedule: string
  rate?: string
  handler: Function
  timeout: number
  constructor(
    id: string,
    rate?: string,
    schedule: string,
    handler: Function,
    timeout: number,
    name?: string,
    errors?: string[]
  )
}

type ArgOption = { timeout?: number } | Function

export declare interface Schedule {
  every(expression: string, ...args: ArgOption[]): ScheduleHandler | null
  cron(expression: string, ...args: ArgOption[]): ScheduleHandler | null
  rate(expression: string, ...args: ArgOption[]): ScheduleHandler | null
  task: (...args: any[]) => void
  at: (date: string, payload?: any) => Promise<void>
}

declare const schedule: (name: string) => Schedule
export default schedule
